{"version":3,"file":"component---src-pages-index-js-8ea04ac6e00d99ab1cf9.js","mappings":"iLAIMA,GAAUC,EAAAA,EAAAA,SAAOC,EAAAA,IAAV,2EAAGD,CAAH,8ZA+Cb,EAXoB,WAClB,OACE,gCACE,gBAACD,EAAD,CAASG,GAAG,KAAZ,QACA,gBAACH,EAAD,CAASG,GAAG,UAAZ,SACA,gBAACH,EAAD,CAASG,GAAG,SAAZ,QACA,gBAACH,EAAD,CAASG,GAAG,YAAZ,iBCxCAC,EAAaH,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,ySAuBVI,EAASJ,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,oGAWNK,EAASL,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,oQAeA,SAAAM,GAAK,OAAKA,EAAMC,KAAO,QAAU,OAIvCC,EAAYR,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,mUAOA,SAAAM,GAAK,OAAKA,EAAMC,KAAO,iBAAmB,aAaxC,SAAAD,GAAK,OAChBA,EAAMC,KAAO,uCAAyC,kBAK7C,SAAAD,GAAK,OAAKA,EAAMC,KAAO,IAAM,OAC3B,SAAAD,GAAK,OAAKA,EAAMC,KAAO,iBAAmB,kBA6B3D,EAzBe,WACb,OAAoCE,EAAAA,EAAAA,WAAS,GAAtCC,EAAP,KAAmBC,EAAnB,KAEA,OACE,gBAACR,EAAD,KAEE,gBAACC,EAAD,CACEM,WAAYA,EACZE,QAAS,kBAAMD,GAAeD,KAE7BA,EAAa,gBAACF,EAAD,CAAWD,MAAI,IAAM,gBAACC,EAAD,OAEpCE,EACC,gBAACL,EAAD,KACE,gBAAC,EAAD,OAGF,gBAACA,EAAD,CAAQE,MAAI,GACV,gBAAC,EAAD,SCrER,EAzBa,SAAC,GAA6B,IAA3BM,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,GAAOC,EAAAA,EAAAA,IAAe,cAU1B,OACE,uBAAKC,UCzBY,mCD0Bf,6BAAQJ,EAAR,MAAsBE,EAAKG,KAAKC,aAAaC,OAC7C,0BAAQH,UCtBO,oCDsBgBF,EAAKG,KAAKC,aAAaC,OACtD,gBAAC,EAAD,MAEA,4BACE,sBAAIH,UC9BO,iCD8BcJ,GACxBC,M,6DEXX,UAjBkB,WAIhB,OACE,gBAAC,IAAD,CAAQD,UAAU,aAChB,8EACA,gBAAC,EAAAQ,EAAD,CACEC,IAAI,4BACJC,IAAI","sources":["webpack://gatsby-site/./src/components/Navbar/NavbarLinks.js","webpack://gatsby-site/./src/components/Navbar/Navbar.js","webpack://gatsby-site/./src/components/layout.js","webpack://gatsby-site/./src/components/layout.module.css","webpack://gatsby-site/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst NavItem = styled(Link)`\r\n  text-decoration: none;\r\n  text-align: center;\r\n  color: #111;\r\n  display: inline-block;\r\n  white-space: nowrap;\r\n  margin: 0 1vw;\r\n  transition: all 200ms ease-in;\r\n  position: relative;\r\n\r\n  :after {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 0%;\r\n    content: \".\";\r\n    color: transparent;\r\n    background: goldenrod;\r\n    height: 1px;\r\n    transition: all 0.4s ease-in;\r\n  }\r\n\r\n  :hover {\r\n    color: purple;\r\n    ::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 20px 0;\r\n    font-size: 1.5rem;\r\n    z-index: 6;\r\n  }\r\n`\r\nconst NavbarLinks = () => {\r\n  return (\r\n    <>\r\n      <NavItem to=\"/\">Home</NavItem>\r\n      <NavItem to=\"/about\">About</NavItem>\r\n      <NavItem to=\"/blog\">Blog</NavItem>\r\n      <NavItem to=\"/pokemon\">All Pokemon</NavItem>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavbarLinks\r\n","import React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport NavbarLinks from \"./NavbarLinks\"\r\n\r\n\r\nconst Navigation = styled.nav`\r\n  height: 10vh;\r\n  display: flex;\r\n  background-color: #fff;\r\n  position: relative;\r\n  justify-content: space-between;\r\n  text-transform: uppercase;\r\n  border-bottom: 2px solid #33333320;\r\n  margin: 0 auto;\r\n  padding: 0 5vw;\r\n  z-index: 2;\r\n  align-self: center;\r\n\r\n  @media (max-width: 768px) {\r\n    position: sticky;\r\n    height: 8vh;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    left: 0;\r\n  }\r\n`\r\n\r\nconst Toggle = styled.div`\r\n  display: none;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  padding: 0 10vw;\r\n\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Navbox = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    position: fixed;\r\n    width: 100%;\r\n    justify-content: flex-start;\r\n    padding-top: 10vh;\r\n    background-color: #fff;\r\n    transition: all 0.3s ease-in;\r\n    top: 8vh;\r\n    left: ${props => (props.open ? \"-100%\" : \"0\")};\r\n  }\r\n`\r\n\r\nconst Hamburger = styled.div`\r\n  background-color: #111;\r\n  width: 30px;\r\n  height: 3px;\r\n  transition: all 0.3s linear;\r\n  align-self: center;\r\n  position: relative;\r\n  transform: ${props => (props.open ? \"rotate(-45deg)\" : \"inherit\")};\r\n\r\n  ::before,\r\n  ::after {\r\n    width: 30px;\r\n    height: 3px;\r\n    background-color: #111;\r\n    content: \"\";\r\n    position: absolute;\r\n    transition: all 0.3s linear;\r\n  }\r\n\r\n  ::before {\r\n    transform: ${props =>\r\n      props.open ? \"rotate(-90deg) translate(-10px, 0px)\" : \"rotate(0deg)\"};\r\n    top: -10px;\r\n  }\r\n\r\n  ::after {\r\n    opacity: ${props => (props.open ? \"0\" : \"1\")};\r\n    transform: ${props => (props.open ? \"rotate(90deg) \" : \"rotate(0deg)\")};\r\n    top: 10px;\r\n  }\r\n`\r\nconst Navbar = () => {\r\n  const [navbarOpen, setNavbarOpen] = useState(false)\r\n\r\n  return (\r\n    <Navigation>\r\n      \r\n      <Toggle\r\n        navbarOpen={navbarOpen}\r\n        onClick={() => setNavbarOpen(!navbarOpen)}\r\n      >\r\n        {navbarOpen ? <Hamburger open /> : <Hamburger />}\r\n      </Toggle>\r\n      {navbarOpen ? (\r\n        <Navbox>\r\n          <NavbarLinks />\r\n        </Navbox>\r\n      ) : (\r\n        <Navbox open>\r\n          <NavbarLinks />\r\n        </Navbox>\r\n      )}\r\n    </Navigation>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  siteTitle,\r\n} from './layout.module.css'\r\nimport Navbar from \"./Navbar/Navbar\"\r\n\r\n// ... import statements\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n  const data = useStaticQuery(graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `)\r\n  \r\n    return (\r\n      <div className={container}>\r\n        <title>{pageTitle} | {data.site.siteMetadata.title}</title>\r\n        <header className={siteTitle}>{data.site.siteMetadata.title}</header>\r\n        <Navbar></Navbar>\r\n      \r\n        <main>\r\n          <h1 className={heading}>{pageTitle}</h1>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Layout","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--eLBMS\";\nexport var heading = \"layout-module--heading--8VjLO\";\nexport var navLinks = \"layout-module--nav-links--EROwB\";\nexport var navLinkItem = \"layout-module--nav-link-item--pfCo2\";\nexport var navLinkText = \"layout-module--nav-link-text--ac2nV\";\nexport var siteTitle = \"layout-module--site-title--5N6mf\";\nexport var choose = \"layout-module--choose--J+-uv\";","import * as React from 'react'\nimport Layout from '../components/layout'\nimport { GatsbyImage, StaticImage } from 'gatsby-plugin-image'\n\n\nconst IndexPage = () => {\n\n  \n\n  return (\n    <Layout pageTitle=\"Home Page\">\n      <p>I'm making this by following the Gatsby Tutorial.</p>\n      <GatsbyImage\n        alt=\"A cat in a slice of bread\"\n        src=\"../images/catBread.jpg\"\n      />\n\n\n    </Layout>\n  )\n}\n\nexport default IndexPage"],"names":["NavItem","styled","Link","to","Navigation","Toggle","Navbox","props","open","Hamburger","useState","navbarOpen","setNavbarOpen","onClick","pageTitle","children","data","useStaticQuery","className","site","siteMetadata","title","G","alt","src"],"sourceRoot":""}